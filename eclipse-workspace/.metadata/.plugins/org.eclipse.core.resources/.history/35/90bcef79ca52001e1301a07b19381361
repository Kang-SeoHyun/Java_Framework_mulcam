package com.multicampus.controller.board;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.SessionAttributes;

import com.multicampus.biz.board.BoardDAOJDBC;
import com.multicampus.biz.board.BoardVO;

// Model에 "board"라는 이름을 데이터가 등록될 때, 세션에도 "board"라는 이름으로 동일하게 등록해라. 
@SessionAttributes("board")
@Controller
public class BoardController {
	
	// 글 등록 화면으로 이동
	@RequestMapping("/insertBoardView.do")
	public String insertBoardView() throws Exception {
		return "insertBoard";
	}

	// 글 등록 
	@RequestMapping("/insertBoard.do")
	public String insertBoard(BoardVO vo, BoardDAOJDBC dao) throws Exception {
		dao.insertBoard(vo);
		return "redirect:getBoardList.do";
	}
	
	// 글 수정
	@RequestMapping("/updateBoard.do")
	// 세션에 "board"라는 이름으로 등록된 객가 있다면 그 객체를 우선 적용해라.
	public String updateBoard(@ModelAttribute("board") BoardVO vo, BoardDAOJDBC dao) throws Exception {
		dao.updateBoard(vo);
		return "forward:getBoardList.do";
	}
	
	// 글 삭제
	@RequestMapping("/deleteBoard.do")
	public String deleteBoard(BoardVO vo, BoardDAOJDBC dao) throws Exception {
		dao.deleteBoard(vo);
		return "forward:getBoardList.do";
	}
	
	// 글 상세 조회
	@RequestMapping("/getBoard.do")
	public String getBoard(BoardVO vo, BoardDAOJDBC dao, Model model) throws Exception {
		model.addAttribute("board", dao.getBoard(vo)); // Model 정보 저장
		return "getBoard";   // View 이름 리턴
	}
	
	// 글 목록 검색
	@RequestMapping("/getBoardList.do")
	public String getBoardList(BoardVO vo, BoardDAOJDBC dao, Model model) throws Exception {
		// Null Check
		if(vo.getSearchCondition() == null) vo.setSearchCondition("TITLE");
		if(vo.getSearchKeyword() == null) vo.setSearchKeyword("");
		model.addAttribute("boardList", dao.getBoardList(vo)); // Model 정보 저장
		model.addAttribute("search", vo); // Model 정보 저장
		return "getBoardList";   // View 이름 리턴
	}

}










