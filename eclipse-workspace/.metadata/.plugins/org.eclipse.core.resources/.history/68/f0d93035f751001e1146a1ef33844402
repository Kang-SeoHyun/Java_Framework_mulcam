package com.multicampus.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.multicampus.biz.board.BoardDAOJDBC;
import com.multicampus.biz.board.BoardVO;
import com.multicampus.biz.user.UserDAOJDBC;
import com.multicampus.biz.user.UserVO;

public class DispatcherServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

    public DispatcherServlet() {
        System.out.println("===> DispatcherServlet 생성");
    }

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 1. 클라이언트(브라우저)의 요청 path 정보를 추출한다. 
		String path = request.getRequestURI();
		System.out.println("path : " + path);
		
		// 2. 요청 path에 따라 로직을 분기처리한다. 
		if(path.equals("/login.do")) {
			System.out.println("로그인 기능 처리");
			
			// 1. 사용자 입력정보 추출
			String id = request.getParameter("id");
			String password = request.getParameter("password");
			
			// 2. DB 연동 처리
			UserVO vo = new UserVO();
			vo.setId(id);
			vo.setPassword(password);
			
			UserDAOJDBC dao = new UserDAOJDBC();
			UserVO user = dao.getUser(vo);
			
			// 3. 화면 이동
			if(user != null) {	// 로그인 성공
				HttpSession session = request.getSession();
				session.setAttribute("user", user);
				
				response.sendRedirect("getBoardList.jsp");
			} else {			// 로그인 실패
				response.sendRedirect("login.jsp");
			}
			
		} else if(path.equals("/logout.do")) {
			System.out.println("로그아웃 기능 처리");
		} else if(path.equals("/insertBoard.do")) {
			System.out.println("글 등록 기능 처리");
		} else if(path.equals("/updateBoard.do")) {
			System.out.println("글 수정 기능 처리");
		} else if(path.equals("/deleteBoard.do")) {
			System.out.println("글 삭제 기능 처리");
		} else if(path.equals("/getBoard.do")) {
			System.out.println("글 상세 조회 기능 처리");
		} else if(path.equals("/getBoardList.do")) {
			System.out.println("글 목록 검색 기능 처리");
			
			// 1. DB 연동 처리
			BoardVO vo = new BoardVO();
			BoardDAOJDBC dao = new BoardDAOJDBC();
			List<BoardVO> boardList = dao.getBoardList(vo);
			
			// 2. Model(DAO)을 이용하여 검색한 데이터를 View(JSP)가 사용할 수 있도록 세션에 검색 결과를 등록한다.
			HttpSession session = request.getSession();
			session.setAttribute("boardList", boardList);
			
			response.sendRedirect("getBoardList.jsp");
			
		} else {
			System.out.println("요청 URL을 다시 확인하세요.");
		}
	}

}












